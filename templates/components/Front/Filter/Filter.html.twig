<div class="container px-4 mx-auto py-2 lg:px-10 2xl:px-20">
    <form class="grid" id="filterForm" method="GET" accept-charset="UTF-8" enctype="multipart/form-data" {% if sport is not defined %}action="{{ path('app_front_search') }}"{% endif %}>
        <div class="flex gap-x-4 mb-4">
            {% if app.request.query.get('text') %}
                {% set textFilter = app.request.query.get('text') %}
            {% endif %}
            <input type="text" name="text" class="w-full rounded border" placeholder="Exemple : Maillot Lebon James..." {% if textFilter is defined %}value="{{ textFilter }}"{% endif %}>
            {{ component('Global:Button',{ tag: 'button', text: 'Rechercher', class: 'primary', custom_class: 'h-full' }) }}
        </div>
        <div class="flex flex-wrap gap-2 {% if custom_class is defined %}{{ custom_class }}{% endif %}">
            {% if sport is defined %}
                {{ component('Global:Button', { tag: 'a', text: 'Réinitialiser les filtres', route: 'app_front_sport_show', route_parameter: [ { name: 'slug', value: sport.id|trans~'-'~sport.title } ], class: 'secondary', size: 'text-base' }) }}
                <select class="rounded" disabled name="sport" onchange="this.form.submit()">
                    <option value="{{ sport.id }}" selected disabled>{{ sport.title }}</option>
                </select>
                {{ component('Front:Filter:Select', { sport: sport, text: 'Ligue', variable: 'league', options_name: 'leagues', object: true, search: true }) }}
                {{ component('Front:Filter:Select', { sport: sport, text: 'Equipe', variable: 'team', options_name: 'teams', object: true, search: true }) }}
                {{ component('Front:Filter:Select', { sport: sport, text: 'Joueur', variable: 'player', options_name: 'players', object: true, search: true }) }}
            {% else %}
                {% if app.request.get('_route') != 'app_front_home' %}
                    {{ component('Global:Button', { tag: 'a', text: 'Réinitialiser les filtres', route: 'app_front_search', class: 'secondary', size: 'text-base' }) }}
                {% endif %}
                {{ component('Front:Filter:Select', { text: 'Sport', variable: 'sport', options_name: 'sports', object: true, search: true }) }}
                {{ component('Front:Filter:Select', { text: 'Ligue', variable: 'league', options_name: 'leagues', object: true, search: true }) }}
                {{ component('Front:Filter:Select', { text: 'Equipe', variable: 'team', options_name: 'teams', object: true, search: true }) }}
                {{ component('Front:Filter:Select', { text: 'Joueur', variable: 'player', options_name: 'players', object: true, search: true }) }}
            {% endif %}
            {{ component('Front:Filter:Select', { text: 'Numéro', variable: 'number', options_name: 'numbers'}) }}
            {{ component('Front:Filter:Select', { text: 'Marque', variable: 'brand', options_name: 'brands', object: true, search: true }) }}
            {{ component('Front:Filter:Select', { text: 'Genre', variable: 'type', options_name: 'types' }) }}
            {{ component('Front:Filter:Select', { text: 'Taille', variable: 'size', options_name: 'sizes' }) }}
            {{ component('Front:Filter:Select', { text: 'État', variable: 'conditionnement', options_name: 'conditionnements' }) }}
            {{ component('Front:Filter:Select', { text: 'Couleurs', variable: 'colors', options_name: 'colors', object: true }) }}
            {{ component('Front:Filter:Select', { text: 'Matières', variable: 'textils', options_name: 'textils', object: true }) }}
            {{ component('Front:Filter:Select', { text: 'Localisation', variable: 'departments', options_name: 'departments', object: true, search: true }) }}
        </div>
    </form>

    <div class="flex gap-x-2 mt-4">
        {% for filter in this.filters %}
            <div onclick="deleteFilter('{{ filter[0] }}','{{ filter[1] }}');" class="px-4 py-2 rounded border-graydark border w-fit cursor-pointer hover:bg-gray">
                <i class="fa-regular fa-xmark"></i> {{ filter[2] }}
            </div>
        {% endfor %}
    </div>
</div>

<script>
    function showFilter(id){
        select = document.getElementById(id).getElementsByClassName('select')[0];
        list = document.getElementById(id).getElementsByClassName('list')[0];
        alllists = document.getElementsByClassName('list')
        allselects = document.getElementsByClassName('select')
        for (i=0;i<alllists.length;i++){
            if(!alllists[i].classList.contains('hidden') && alllists[i] != list){
                alllists[i].classList.add('hidden');
            }
            if(!allselects[i].classList.contains('active') && allselects[i].classList.contains('bg-secondary') && allselects[i] != select){
                allselects[i].classList.remove('bg-secondary');
            }
        }

        if(list.classList.contains('hidden')){
            list.classList.remove('hidden');
            if(!select.classList.contains('active')){
                select.classList.add('bg-secondary');
            }

        }
        else {
            list.classList.add('hidden');
            if(!select.classList.contains('active')){
                select.classList.remove('bg-secondary');
            }
        }
    }

    function deleteFilter(filter,id){
        const form = document.querySelector('#filterForm');
        if(filter === "text"){
            const input = document.querySelectorAll('input[name="'+filter+'"]')[0];
            input.value = null;
        }
        else {
            const checkboxs = document.querySelectorAll('input[name="'+filter+'[]"]');
            checkboxs.forEach(checkbox => {
                if(checkbox.value == id){
                    checkbox.checked = false
                }
            })
        }
        form.submit();
    }
</script>