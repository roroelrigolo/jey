{% if attributs is defined %}
    {% set setclass = false %}
    {% set attrs = {} %}
    {% for attribut in attributs %}
        {% set value = attribut.value %}
        {% if attribut.name == "class" %}
            {% if type == "toogle" %}
                {% set value = "sr-only peer "~value %}
            {% else %}
                {% set value = "border p-2 w-full "~value %}
            {% endif %}
            {% set setclass = true %}
        {% endif %}
        {% set attrs = attrs|merge({
            (attribut.name):value
        }) %}
    {% endfor %}
    {% if setclass == false %}
        {% if type == "toogle" %}
            {% set attrs = attrs|merge({
                ('class'):'sr-only peer'
            }) %}
        {% else %}
            {% set attrs = attrs|merge({
                ('class'):'border p-2 w-full'
            }) %}
        {% endif %}
    {% endif %}
{% endif %}
<div class="mb-3">
    {# Classic input #}
    {% if type == "input" %}
        <div class="mb-3 {{ group_class }}" id="group-{{ input_name }}">
            {{ form_label(form[input_name], null ,{'label_attr': {'class': 'w-full'}}) }}
            {{ form_widget(form[input_name],{ 'attr': attrs }) }}
        </div>
    {% endif %}

    {# Toogle input #}
    {% if type == "toogle" %}
        <label class="relative items-center cursor-pointer">
            {{ form_label(form[input_name], null ,{'label_attr': {'class': 'w-full'}}) }}
            {% if description != "" %}
                <p class="text-xs text-gray italic">{{ description }}</p>
            {% endif %}
            {{form_widget(form[input_name],{'attr': attrs})}}
            <div class="w-11 h-6 bg-gray-200 bg-gray peer-focus:outline-none rounded-full peer peer-checked:after:translate-x-full rtl:peer-checked:after:-translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:mt-[1px] after:start-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-primary"></div>
        </label>
    {% endif %}

    {# Team input #}
    {% if type == "team" %}
        <div class="mb-3">
            <label class="w-full">Equipes</label>
            <ul class="select-team border min-h-[55px] flex p-2 w-100" onclick="displayListTeam()">
                {% if id_player is defined and id_player != "" %}
                    {% for value in this.player.teams %}
                        {% for team in this.teams %}
                            {% if value == team.id %}
                                <li class="li-select-team bg-secondary rounded p-2 me-2" value="{{ team.id }}" onclick="deleteTeam('{{ team.id }}')">{{ team.title }}</li>
                            {% endif %}
                        {% endfor %}
                    {% endfor %}
                {% endif %}
            </ul>
            <ul id="listTeam" class="border border-t-0 hidden">
                {% for team in this.teams %}
                    {% set active = false %}
                    {% if id_player is defined and id_player != "" %}
                        {% for value in this.player.teams %}
                            {% if value == team.id and active == false %}
                                {% set active = true %}
                            {% endif %}
                        {% endfor %}
                        {% if active == true %}
                            <input type="checkbox" checked class="hidden team-checkbox" id="teams" name="teams[]" value="{{ team.id }}"/>
                            <li onclick="addTeam('{{ team.title }}','{{ team.id }}')" value="{{ team.id }}" class="list-team-li bg-secondary p-2 w-full hover:bg-gray">{{ team.title }}</li>
                        {% else %}
                            <input type="checkbox" class="hidden team-checkbox" id="teams" name="teams[]" value="{{ team.id }}"/>
                            <li onclick="addTeam('{{ team.title }}','{{ team.id }}')" value="{{ team.id }}" class="list-team-li p-2 w-full hover:bg-gray">{{ team.title }}</li>
                        {% endif %}
                    {% else %}
                        <input type="checkbox" class="hidden team-checkbox" id="teams" name="teams[]" value="{{ team.id }}"/>
                        <li onclick="addTeam('{{ team.title }}','{{ team.id }}')" value="{{ team.id }}" class="list-team-li p-2 w-full hover:bg-gray">{{ team.title }}</li>
                    {% endif %}
                {% endfor %}
            </ul>
        </div>
    {% endif %}

    {# Input Select custom #}
    {% if type == "customSelect" %}
        <div class="mb-3 relative {{ group_class }}" id="group-{{ input_name }}">
            <label class="w-full">{{ label }}</label>
            <input id="search-input-{{ input_name }}" name="search-input-{{ input_name }}" class="w-full" type="text" placeholder="{{ placeholder }}" onclick="displayListSelect('search-list-{{ input_name }}')" onkeyup="changeListFilter('{{ input_name }}')" {% if required == true %}required{% endif %}>
            <div id="search-list-{{ input_name }}" class="hidden absolute left-0 right-0 bg-white grid z-50 overflow-y-scroll max-h-[300px]">
                {% set mapping = {
                    'sport': this.sports,
                    'league': this.leagues,
                    'team': this.teams,
                    'player': this.players,
                    'brand': this.brands
                } %}
                {% set get = mapping[input_name] %}

                {% for item in get %}
                    {% if input_name == "player" %}
                        {% set textInput = item.lastName ~ ' ' ~ item.firstName %}
                    {% else %}
                        {% set textInput = item.title %}
                    {% endif %}
                    <div onclick="fillInput('{{ textInput }}','{{ input_name }}')" class="search-{{ input_name }} w-full h-fit px-4 py-2 hover:bg-secondary">
                        <p>{{ textInput }}</p>
                    </div>
                {% endfor %}
                <div id="search-noresult-{{ input_name }}" class="px-4 py-2 hidden hover:bg-secondary" onclick="fillInput('input','{{ input_name }}')">
                    <p>Aucun résultat disponible</p>
                    <p>Utiliser <span id="search-noresult-new-{{ input_name }}"></span> comme {{ input_name}} ?</p>
                </div>
            </div>
        </div>
    {% endif %}
</div>

<script>
    function displayListSelect(idList){
        list = document.querySelector('#'+idList);
        if(list.classList.contains('hidden')){
            list.classList.remove('hidden');
        }
        else {
            list.classList.add('hidden');
        }
    }
    function changeListFilter(variable){
        //On définit les variables
        const inputId = '#search-input-' + variable;
        const classeListOptions = '.search-' + variable;
        const listResultId = '#search-list-' + variable;
        const noResultId = "#search-noresult-" + variable;
        let noResultValue = true;

        //On récupère les balises et valeur html nécessaires
        const options = document.querySelectorAll(classeListOptions);
        const inputValue = document.querySelector(inputId).value;
        const listResult = document.querySelector(listResultId);
        const noResult = document.querySelector(noResultId);

        //On affiche toute la liste
        listResult.classList.toggle('hidden', false);

        for(let i=0;i<options.length;i++){
            const option = options[i];
            if(option.classList.contains('hidden')){
                option.classList.remove('hidden');
            }
            if (!option.querySelector('p').textContent.toUpperCase().includes(inputValue.toUpperCase())) {
                option.classList.add('hidden');
            }
            // Mise à jour de noResultValue
            if (!option.classList.contains('hidden')) {
                noResultValue = false;
            }
        }
        //On affiche ou non le noResult
        noResult.classList.toggle('hidden', !noResultValue);
        if (noResultValue) {
            const idNewInput = "#search-noresult-new-" + variable;
            document.querySelector(idNewInput).textContent = '"' + inputValue + '"';
        }
        if (inputValue === "") {
            noResult.classList.add('hidden');
        }
    }
    function fillInput (text, variable){
        const inputId = '#search-input-' + variable;
        const listResultId = '#search-list-' + variable;
        const inputValue = document.querySelector(inputId);
        const listResult = document.querySelector(listResultId);
        console.log(text)
        if (text !== "input") {
            inputValue.value = text;
        }
        listResult.classList.add('hidden');
    }

    {% if type == "toogle" %}
        function showFlockInputs() {
            let checkValue = document.querySelector('#product_form_flock').checked
            if(!checkValue){
                document.querySelector('#group-player').classList.add('hidden')
                document.querySelector('#group-number').classList.add('hidden')
            }
            else {
                document.querySelector('#group-player').classList.remove('hidden')
                document.querySelector('#group-number').classList.remove('hidden')
            }
        }
    {% endif %}
</script>